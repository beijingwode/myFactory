<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="ApprProductMapper">

    <resultMap id="ApprProduct" type="com.wode.factory.model.ApprProduct">
        <result property="id" column="id"/>
        <result property="productId" column="product_id"/>
        <result property="brandId" column="brand_id"/>
        <result property="partnumber" column="partnumber"/>
        <result property="fullName" column="full_name"/>
        <result property="name" column="name"/>
        <result property="promotion" column="promotion"/>
        <result property="keyword" column="keyword"/>
        <result property="unit" column="unit"/>
        <result property="weight" column="weight"/>
        <result property="type" column="type"/>
        <result property="model" column="model"/>
        <result property="showPrice" column="show_price"/>
        <result property="introduction" column="introduction"/>
        <result property="image" column="image"/>
        <result property="isMarketable" column="is_marketable"/>
        <result property="isRecomment" column="is_recomment"/>
        <result property="status" column="status"/>
        <result property="supplierId" column="supplier_id"/>
        <result property="shopId" column="shop_id"/>
        <result property="createDate" column="createDate"/>
        <result property="updateDate" column="updateDate"/>
        <result property="marque" column="marque"/>
        <result property="barcode" column="barcode"/>
        <result property="roughWeight" column="rough_weight"/>
        <result property="netWeight" column="net_weight"/>
        <result property="length" column="length"/>
        <result property="width" column="width"/>
        <result property="height" column="height"/>
        <result property="bulk" column="bulk"/>
        <result property="hasSku" column="has_sku"/>
        <result property="stockLockType" column="stock_lock_type"/>
        <result property="province" column="province"/>
        <result property="town" column="town"/>
        <result property="county" column="county"/>
        <result property="produceaddress" column="produceaddress"/>
        <result property="carriage" column="carriage"/>
        <result property="storeId" column="storeId"/>
        <result property="categoryId" column="categoryId"/>
        <result property="afterService" column="afterService"/>
        <result property="sendProvince" column="sendProvince"/>
        <result property="sendTown" column="sendTown"/>
        <result property="sendCounty" column="sendCounty"/>
        <result property="sendAddress" column="sendAddress"/>
        <result property="minprice" column="minprice"/>
        <result property="maxprice" column="maxprice"/>
        <result property="allnum" column="allnum"/>
        <result property="sellNum" column="sell_num"/>
        <result property="commentCount" column="comment_count"/>
        <result property="introductionMobile" column="introduction_mobile"/>
        <result property="sortNum" column="sortNum"/>
        <result property="limitCnt" column="limit_cnt"/>
        <result property="areasName" column="areas_name"/>
        <result property="areasCode" column="areas_code"/>
        <result property="saleKbn" column="sale_kbn"/>
        <result property="saleNote" column="sale_note"/>
        <result property="limitKbn" column="limit_kbn"/>
        <result property="locked" column="locked"/>
        <result property="lockReason" column="lock_reason"/>
        <result property="welfarePrice" column="welfare_price"/>
        <result property="divLevel" column="div_level"/>
        <result property="empPrice" column="emp_price"/>
        <result property="empCash" column="emp_cash"/>
        <result property="empLevel" column="emp_level"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateName" column="update_name"/>
        <result property="shopname" column="shopname"/>
        <result property="categoryName" column="categoryName"/><!-- 类目名称 --> 
        <result property="brandName" column="brandName"/><!-- 品牌名称 --> 
        <result property="storeCategoryName" column="storeCategoryName"/><!--自定义商品类别名称 -->
        <result property="opinion" column="opinion"/><!--审核不通过理由 -->
        <result property="sortNum" column="sortNum"/><!--商品展示排位 -->
        <result property="savestate" column="savestate"/><!-- 商品保存状态（完整和不完整） -->
        <result property="updateDesc" column="update_desc"/><!-- 修改商品内容后端显示 -->
        <result property="questionnaireId" column="questionnaire_id"/><!-- 修改商品内容后端显示 -->
         <result property="outerId" column="outer_id"/> 
         <!-- sku list -->
        <collection property="productSpecificationslist" ofType="com.wode.factory.model.ProductSpecifications">  
			<result property="id" column="id_specifications"/>
	        <result property="productCode" column="product_code_specifications"/>
	        <result property="cost" column="cost_specifications"/>
	        <result property="maxFucoin" column="maxFucoin_specifications"/>
	        <result property="marketPrice" column="market_price_specifications"/>
	        <result property="price" column="price_specifications"/>
	        <result property="stock" column="stock_specifications"/>
	        <result property="itemids" column="itemids_specifications"/>
	        <result property="warnnum" column="warnnum_specifications"/>
	         <result property="minLimitNum" column="min_limit_num"/>
	        <result property="internalPurchasePrice" column="internal_purchase_price_specifications"/> 
	        <collection property="productSpecificationsImagelist"  ofType="com.wode.factory.model.ProductSpecificationsImage">
		        <result property="id" column="id_specificationsimage"/>
		        <result property="source" column="source_specificationsimage"/>
	        </collection>
		</collection>
		
		<!--规格 list -->
        <collection property="productSpecificationValuelist" ofType="com.wode.factory.model.ProductSpecificationValue">  
	        <result property="id" column="id_specificationValue"/>
	        <result property="specificationValue" column="specification_value_specificationValue"/>
	        <result property="specificationId" column="specification_id_specificationValue"/>
		</collection>
		
		<!--属性 list -->
        <collection property="productAttributelist" ofType="com.wode.factory.model.ProductAttribute">  
	        <result property="attributeName" column="name_attr"/>
	        <result property="value" column="value_attribute"/>
		</collection>
		
		<!--参数 list -->
        <collection property="productParameterValuelist" ofType="com.wode.factory.model.ProductParameterValue">
	        <result property="parameterGroupName" column="name_para"/>
	        <result property="parameterValue" column="parameter_value_parameter"/>
		</collection>
		
		<!--清单 list -->
        <collection property="productDetaillist" ofType="com.wode.factory.model.ProductDetailList">
	        <result property="name" column="name_detail"/>
	        <result property="num" column="num_detail"/>
		</collection>

    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[
        id,product_id,brand_id,partnumber,full_name,name,promotion,keyword,unit,weight,type,model,show_price,introduction,
        image,is_marketable,is_recomment,status,supplier_id,shop_id,createDate,updateDate,marque,barcode,rough_weight,
        net_weight,length,width,height,bulk,has_sku,stock_lock_type,province,town,county,produceaddress,carriage,storeId,
        categoryId,afterService,sendProvince,sendTown,sendCounty,sendAddress,minprice,maxprice,allnum,sell_num,comment_count,
        introduction_mobile,sortNum,limit_cnt,areas_name,areas_code,sale_kbn,sale_note,limit_kbn,locked,lock_reason,
        welfare_price,div_level,emp_price,emp_cash,emp_level,update_time,update_user,update_name,savestate,update_desc,questionnaire_id,outer_id
        ]]>
    </sql>
    <!-- 用来保存审核未通过的信息 -->
     <select id="getProductCheckById" resultMap="ApprProduct">
			SELECT product.id,product.product_id,product.status,product.barcode,product.image,product.name,category.name as categoryName,product.full_name,opinion.opinion as opinion
			<![CDATA[
			from t_appr_product as product
			LEFT JOIN (SELECT * from t_check_opinion WHERE checkId =#{productId} ORDER BY time desc LIMIT 0,1) as opinion ON opinion.checkId = product.product_id
			LEFT JOIN t_product_category as category on category.id=product.categoryId
			WHERE product.product_id=#{productId} and status < 0
			]]>
    </select>
    

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_appr_product (
            id ,
            product_id ,
            brand_id ,
            partnumber ,
            full_name ,
            name ,
            promotion ,
            keyword ,
            unit ,
            weight ,
            type ,
            model ,
            show_price ,
            introduction ,
            image ,
            is_marketable ,
            is_recomment ,
            status ,
            supplier_id ,
            shop_id ,
            createDate ,
            updateDate ,
            marque ,
            barcode ,
            rough_weight ,
            net_weight ,
            length ,
            width ,
            height ,
            bulk ,
            has_sku ,
            stock_lock_type ,
            province ,
            town ,
            county ,
            produceaddress ,
            carriage ,
            storeId ,
            categoryId ,
            afterService ,
            sendProvince ,
            sendTown ,
            sendCounty ,
            sendAddress ,
            minprice ,
            maxprice ,
            allnum ,
            sell_num ,
            comment_count ,
            introduction_mobile ,
            sortNum ,
            limit_cnt ,
            areas_name ,
            areas_code ,
            sale_kbn ,
            sale_note ,
            limit_kbn ,
            locked ,
            lock_reason ,
            welfare_price ,
            div_level ,
            emp_price ,
            emp_cash ,
            emp_level ,
            update_time ,
            update_user ,
            update_name ,
            savestate ,
            update_desc,
            questionnaire_id,
            outer_id
        ) VALUES (
            #{id} ,
            #{productId} ,
            #{brandId} ,
            #{partnumber} ,
            #{fullName} ,
            #{name} ,
            #{promotion} ,
            #{keyword} ,
            #{unit} ,
            #{weight} ,
            #{type} ,
            #{model} ,
            #{showPrice} ,
            #{introduction} ,
            #{image} ,
            #{isMarketable} ,
            #{isRecomment} ,
            #{status} ,
            #{supplierId} ,
            #{shopId} ,
            #{createDate} ,
            #{updateDate} ,
            #{marque} ,
            #{barcode} ,
            #{roughWeight} ,
            #{netWeight} ,
            #{length} ,
            #{width} ,
            #{height} ,
            #{bulk} ,
            #{hasSku} ,
            #{stockLockType} ,
            #{province} ,
            #{town} ,
            #{county} ,
            #{produceaddress} ,
            #{carriage} ,
            #{storeId} ,
            #{categoryId} ,
            #{afterService} ,
            #{sendProvince} ,
            #{sendTown} ,
            #{sendCounty} ,
            #{sendAddress} ,
            #{minprice} ,
            #{maxprice} ,
            #{allnum} ,
            #{sellNum} ,
            #{commentCount} ,
            #{introductionMobile} ,
            #{sortNum} ,
            #{limitCnt} ,
            #{areasName} ,
            #{areasCode} ,
            #{saleKbn} ,
            #{saleNote} ,
            #{limitKbn} ,
            #{locked} ,
            #{lockReason} ,
            #{welfarePrice} ,
            #{divLevel} ,
            #{empPrice} ,
            #{empCash} ,
            #{empLevel} ,
            #{updateTime} ,
            #{updateUser} ,
            #{updateName} ,
            #{savestate} ,
            #{updateDesc},
            #{questionnaireId},
            #{outerId}
        )
    ]]>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE t_appr_product SET            
            product_id = #{productId} ,
            brand_id = #{brandId} ,
            partnumber = #{partnumber} ,
            full_name = #{fullName} ,
            name = #{name} ,
            promotion = #{promotion} ,
            keyword = #{keyword} ,
            unit = #{unit} ,
            weight = #{weight} ,
            type = #{type} ,
            model = #{model} ,
            show_price = #{showPrice} ,
            introduction = #{introduction} ,
            image = #{image} ,
            is_marketable = #{isMarketable} ,
            is_recomment = #{isRecomment} ,
            status = #{status} ,
            supplier_id = #{supplierId} ,
            shop_id = #{shopId} ,
            createDate = #{createDate} ,
            updateDate = #{updateDate} ,
            marque = #{marque} ,
            barcode = #{barcode} ,
            rough_weight = #{roughWeight} ,
            net_weight = #{netWeight} ,
            length = #{length} ,
            width = #{width} ,
            height = #{height} ,
            bulk = #{bulk} ,
            has_sku = #{hasSku} ,
            stock_lock_type = #{stockLockType} ,
            province = #{province} ,
            town = #{town} ,
            county = #{county} ,
            produceaddress = #{produceaddress} ,
            carriage = #{carriage} ,
            storeId = #{storeId} ,
            categoryId = #{categoryId} ,
            afterService = #{afterService} ,
            sendProvince = #{sendProvince} ,
            sendTown = #{sendTown} ,
            sendCounty = #{sendCounty} ,
            sendAddress = #{sendAddress} ,
            minprice = #{minprice} ,
            maxprice = #{maxprice} ,
            allnum = #{allnum} ,
            sell_num = #{sellNum} ,
            comment_count = #{commentCount} ,
            introduction_mobile = #{introductionMobile} ,
            sortNum = #{sortNum} ,
            limit_cnt = #{limitCnt} ,
            areas_name = #{areasName} ,
            areas_code = #{areasCode} ,
            sale_kbn = #{saleKbn} ,
            sale_note = #{saleNote} ,
            limit_kbn = #{limitKbn} ,
            locked = #{locked} ,
            lock_reason = #{lockReason} ,
            welfare_price = #{welfarePrice} ,
            div_level = #{divLevel} ,
            emp_price = #{empPrice} ,
            emp_cash = #{empCash} ,
            emp_level = #{empLevel} ,
            update_time = #{updateTime} ,
            update_user = #{updateUser} ,
            update_name = #{updateName} ,
            savestate = #{savestate} ,
            update_desc = #{updateDesc},
            questionnaire_id = #{questionnaireId},
	        outer_id =  #{outerId}
        WHERE 
           id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_appr_product WHERE
        id = #{id} 
    ]]>
    </delete>
    <!-- 这里定义了productcontrollor中第448行根据product_id从临时表中获取临时表对象 -->
    <select id="selectProductIdAndStatus" resultMap="ApprProduct">
        SELECT <include refid="columns" />
        <![CDATA[
            FROM t_appr_product 
            WHERE 
                product_id = #{productId} AND status < 2 
        ]]>
    </select>
     <!-- 这里定义了productcontrollor中第1933行根据product_id从临时表中获取临时表对象 后来不对，不用了，不能按照updateDate，按照idelete=0-->
    
    <select id="getById" resultMap="ApprProduct">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_appr_product  
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	<!-- 批量上传时，这里不设置查询条件就是查出该商铺的所有商品，来判断 -->
	<select id="getNotDeleteProductByFullName" resultMap="ApprProduct">
	    SELECT <include refid="columns" />
	    <![CDATA[
		FROM t_appr_product 
		       WHERE 
		        full_name = #{fullName} and supplier_id=#{supplierId}
		]]>
    </select>
    <!-- 根据查询条件获取商品信息 -->
    <select id="selectByModel" resultMap="ApprProduct">
        SELECT <include refid="columns" /> FROM t_appr_product 
        <include refid="find_where"/>
    </select>
  		<!-- 获取商品列表带分页信息 -->
    <select id="findProductlistPage_count" resultType="Integer">
				SELECT count(product.id) from t_appr_product as product
				WHERE product.supplier_id=#{supplierId} 			
				<include refid="findProductlistPage_where"/>
				ORDER BY product.createDate desc
    </select>
	
	<!-- 获取商品列表带分页信息 -->
    <select id="findProductlistPage" resultMap="ApprProduct">
			SELECT product.id,shop.shopname shopname, product.sortNum,product.barcode,product.name,product.full_name,product.is_marketable,
				product.image,product.createDate,category.name as categoryName,product.minprice,product.maxprice,product.allnum,product.status,
				product.sale_kbn,product.locked,product.lock_reason,product.welfare_price,product.div_level,product.emp_price,product.emp_cash,
				product.emp_level,product.savestate
			from t_appr_product as product
			LEFT JOIN t_product_category as category on category.id=product.categoryId
			LEFT JOIN t_shop as shop on shop.id=product.shop_id
			WHERE product.supplier_id=#{supplierId}
			<include refid="findProductlistPage_where"/>
			ORDER BY 
			<choose>  
		        <when test="sortname!= null and sortname=='pricesort'">  
		        	<!-- 价格排序 -->
					<if test="@Ognl@isEmpty(pricesort) or pricesort==1">
						product.minprice asc
					</if>
					<if test="@Ognl@isNotEmpty(pricesort) and pricesort==2">
						product.minprice desc
					</if>
					<!-- 库存排序 -->
					<if test="@Ognl@isEmpty(allnumsort) or allnumsort==1">
						,product.allnum asc
					</if>
					<if test="@Ognl@isNotEmpty(allnumsort) and allnumsort==2">
						,product.allnum desc
					</if>
					<!-- 创建日期 -->
					<if test="@Ognl@isEmpty(createDatesort) or createDatesort==1">
						,product.createDate asc
					</if>
					<if test="@Ognl@isNotEmpty(createDatesort) and createDatesort==2">
						,product.createDate desc
					</if>
					<!-- 排位排序 -->
					<if test="@Ognl@isEmpty(sort) or sort==1">
						,(CASE WHEN product.sortNum IS NULL OR product.sortNum = '' THEN 1 ELSE 0 END), product.sortNum ASC
					</if>
					<if test="@Ognl@isNotEmpty(sort) and sort==2">
						,(CASE WHEN product.sortNum IS NULL OR product.sortNum = '' THEN 1 ELSE 0 END), product.sortNum DESC
					</if>
		        </when>
		        <when test="sortname!= null and sortname=='allnumsort'">  
		       		 <!-- 库存排序 -->
					<if test="@Ognl@isEmpty(allnumsort) or allnumsort==1">
						product.allnum asc
					</if>
					<if test="@Ognl@isNotEmpty(allnumsort) and allnumsort==2">
						product.allnum desc
					</if>
		        	<!-- 价格排序 -->
					<if test="@Ognl@isEmpty(pricesort) or pricesort==1">
						,product.minprice asc
					</if>
					<if test="@Ognl@isNotEmpty(pricesort) and pricesort==2">
						,product.minprice desc
					</if>
					<!-- 创建日期 -->
					<if test="@Ognl@isEmpty(createDatesort) or createDatesort==1">
						,product.createDate asc
					</if>
					<if test="@Ognl@isNotEmpty(createDatesort) and createDatesort==2">
						,product.createDate desc
					</if>
					<!-- 排位排序 -->
					<if test="@Ognl@isEmpty(sort) or sort==1">
						,(CASE WHEN product.sortNum IS NULL OR product.sortNum = '' THEN 1 ELSE 0 END), product.sortNum ASC
					</if>
					<if test="@Ognl@isNotEmpty(sort) and sort==2">
						,(CASE WHEN product.sortNum IS NULL OR product.sortNum = '' THEN 1 ELSE 0 END), product.sortNum DESC
					</if>
		        </when>
		        <when test="sort!= null and sortname=='sort'">  
		       		<!-- 排位排序 -->
					<if test="@Ognl@isEmpty(sort) or sort==1">
						(CASE WHEN product.sortNum IS NULL OR product.sortNum = '' THEN 1 ELSE 0 END), product.sortNum ASC
					</if>
					<if test="@Ognl@isNotEmpty(sort) and sort==2">
						(CASE WHEN product.sortNum IS NULL OR product.sortNum = '' THEN 1 ELSE 0 END), product.sortNum DESC
					</if>
		       		<!-- 库存排序 -->
					<if test="@Ognl@isEmpty(allnumsort) or allnumsort==1">
						,product.allnum asc
					</if>
					<if test="@Ognl@isNotEmpty(allnumsort) and allnumsort==2">
						,product.allnum desc
					</if>
		        	<!-- 价格排序 -->
					<if test="@Ognl@isEmpty(pricesort) or pricesort==1">
						,product.minprice asc
					</if>
					<if test="@Ognl@isNotEmpty(pricesort) and pricesort==2">
						,product.minprice desc
					</if>
					<!-- 创建日期 -->
					<if test="@Ognl@isEmpty(createDatesort) or createDatesort==1">
						,product.createDate asc
					</if>
					<if test="@Ognl@isNotEmpty(createDatesort) and createDatesort==2">
						,product.createDate desc
					</if>
		        </when>
		        <otherwise>  
					<!-- 创建日期 -->
					<if test="@Ognl@isEmpty(createDatesort) or createDatesort==1">
						product.createDate asc
					</if>
					<if test="@Ognl@isNotEmpty(createDatesort) and createDatesort==2">
						product.createDate desc
					</if>	
		        	<!-- 价格排序 -->
					<if test="@Ognl@isEmpty(pricesort) or pricesort==1">
						,product.minprice asc
					</if>
					<if test="@Ognl@isNotEmpty(pricesort) and pricesort==2">
						,product.minprice desc
					</if>
					<!-- 库存排序 -->
					<if test="@Ognl@isEmpty(allnumsort) or allnumsort==1">
						,product.allnum asc
					</if>
					<if test="@Ognl@isNotEmpty(allnumsort) and allnumsort==2">
						,product.allnum desc
					</if>
					<!-- 排位排序 -->
					<if test="@Ognl@isEmpty(sort) or sort==1">
						,(CASE WHEN product.sortNum IS NULL OR product.sortNum = '' THEN 1 ELSE 0 END), product.sortNum ASC
					</if>
					<if test="@Ognl@isNotEmpty(sort) and sort==2">
						,(CASE WHEN product.sortNum IS NULL OR product.sortNum = '' THEN 1 ELSE 0 END), product.sortNum DESC
					</if>
        		</otherwise>
	        </choose>
	        
	        LIMIT #{startnum},#{size}
    </select>
    <!-- 获取商品列表带分页信息 -->
    <select id="getProductByMap" resultMap="ApprProduct">
			SELECT
			product.*,category.name as categoryName,
			IFNULL(brand.name,brand.nameEn) as brandName,
			specifications.min_limit_num as min_limit_num,
			specifications.id as id_specifications,specifications.itemids as itemids_specifications,
			specifications.product_code as product_code_specifications,
			specifications.internal_purchase_price as internal_purchase_price_specifications,
			specifications.price as price_specifications,specifications.cost as cost_specifications,inventory.quantity as stock_specifications,inventory.warnQuantity as warnnum_specifications,specifications.maxFucoin as maxFucoin_specifications,
			specificationsimage.id as id_specificationsimage,specificationsimage.source as source_specificationsimage,
			specificationValue.id as id_specificationValue,specificationValue.specification_value as specification_value_specificationValue,specificationValue.specification_id as specification_id_specificationValue,
			attr.name as name_attr,attribute.value as value_attribute,
			para.name as name_para,paramater.parameter_value as parameter_value_parameter,
			detail.name as name_detail,detail.num as num_detail
			FROM t_appr_product as product
			LEFT JOIN t_product_brand as brand on brand.id=product.brand_id
			LEFT JOIN t_product_category as category on category.id = product.categoryId
			LEFT JOIN (SELECT * from t_product_specifications WHERE  (isDelete IS NULL OR isDelete = 0) AND product_id=#{productId}) as specifications ON specifications.product_id = product.id
			LEFT JOIN t_product_specifications_image as specificationsimage ON specificationsimage.specifications_id=specifications.id
			LEFT JOIN (SELECT * from t_product_specification_value where product_id=#{productId}) as specificationValue ON specificationValue.product_id=product.id
			LEFT JOIN (SELECT * from t_product_attribute where product_id=#{productId}) as attribute on attribute.product_id=product.id
			LEFT JOIN (SELECT * from t_attribute where category_id=#{categoryId}) as attr ON attr.id = attribute.attribute_id
			LEFT JOIN (SELECT * from t_product_parameter_value where productId=#{productId}) as paramater on paramater.productId = product.id
			LEFT JOIN (SELECT * from t_parameter_group where category_id=#{categoryId}) as para on para.id = paramater.parameter_group_id
			LEFT JOIN (SELECT * from t_product_detail_list where product_id=#{productId}) as detail on detail.product_id=product.id
			LEFT JOIN t_inventory as inventory on inventory.productSpecificationsId=specifications.id
			WHERE product.id = #{productId}
			ORDER BY product.sortNum ASC,product.createDate DESC,specifications.id ASC,specificationsimage.id ASC,	specificationValue.orders ASC,attr.orders asc,para.orders asc,detail.orders asc
    </select>
    <sql id="findProductlistPage_where">
    			<if test="@Ognl@isNotEmpty(name)">
					AND product.full_name like CONCAT(CONCAT('%',#{name}),'%')
				</if>
				<if test="@Ognl@isNotEmpty(barcode)">
					AND product.barcode like CONCAT(CONCAT('%',#{barcode}),'%')
				</if>
				<if test="@Ognl@isNotEmpty(categoryid)">
					AND product.categoryId=#{categoryid}
				</if>
				<if test="@Ognl@isNotEmpty(shopId)">
					AND product.shop_id=#{shopId}
				</if>
				<if test="@Ognl@isNotEmpty(starttime)">
					AND product.createDate >=#{starttime}
				</if>
				<if test="@Ognl@isNotEmpty(endtime)">
					AND product.createDate &lt;=#{endtime}
				</if>
				<if test="@Ognl@isNotEmpty(minprice)">
					AND product.minprice >=#{minprice}	
				</if>
				<if test="@Ognl@isNotEmpty(maxprice)">
					AND product.minprice &lt;=#{maxprice}	
				</if>
				<if test="@Ognl@isNotEmpty(isMarketable) and isMarketable==-12">
						AND product.is_marketable in(-1,-2)
				</if>
				<if test="@Ognl@isNotEmpty(isMarketable) and isMarketable==0">
						AND NOT EXISTS(SELECT 1 from t_product p WHERE p.id=product.product_id)
				</if>
				<if test="@Ognl@isNotEmpty(isMarketable) and isMarketable!=-12 and isMarketable!=0">
						AND product.is_marketable =#{isMarketable}
				</if>
				<if test="@Ognl@isNotEmpty(status) and status==-11">
						AND product.status in(-1,1)
				</if>
				<if test="@Ognl@isNotEmpty(status) and status!=-11">
						AND product.status =#{status}
				</if>
				<if test="@Ognl@isNotEmpty(selltype) and selltype=='waitsell'">
						AND product.status =0
				</if> 
				<if test="@Ognl@isNotEmpty(selltype) and selltype=='reject'">
						AND product.status =-1
				</if>
				<if test="@Ognl@isNotEmpty(selltype) and selltype=='waitcheck'">
						AND product.status =1
				</if>
				<if test="@Ognl@isNotEmpty(stoId)">
						AND product.id in(SELECT product_id from t_product_store_category WHERE store_category_id=#{stoId} and supplier_id=#{supplierId})
				</if>
	</sql>
    <sql id="find_where">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
           <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id}
            </if>
           <if test="@Ognl@isNotEmpty(productId)">
                AND product_id = #{productId}
            </if>
           <if test="@Ognl@isNotEmpty(brandId)">
                AND brand_id = #{brandId}
            </if>
           <if test="@Ognl@isNotEmpty(partnumber)">
                AND partnumber = #{partnumber}
            </if>
           <if test="@Ognl@isNotEmpty(fullName)">
                AND full_name = #{fullName}
            </if>
           <if test="@Ognl@isNotEmpty(name)">
                AND name = #{name}
            </if>
           <if test="@Ognl@isNotEmpty(promotion)">
                AND promotion = #{promotion}
            </if>
           <if test="@Ognl@isNotEmpty(keyword)">
                AND keyword = #{keyword}
            </if>
           <if test="@Ognl@isNotEmpty(unit)">
                AND unit = #{unit}
            </if>
           <if test="@Ognl@isNotEmpty(weight)">
                AND weight = #{weight}
            </if>
           <if test="@Ognl@isNotEmpty(type)">
                AND type = #{type}
            </if>
           <if test="@Ognl@isNotEmpty(model)">
                AND model = #{model}
            </if>
           <if test="@Ognl@isNotEmpty(showPrice)">
                AND show_price = #{showPrice}
            </if>
           <if test="@Ognl@isNotEmpty(introduction)">
                AND introduction = #{introduction}
            </if>
           <if test="@Ognl@isNotEmpty(image)">
                AND image = #{image}
            </if>
           <if test="@Ognl@isNotEmpty(isMarketable)">
                AND is_marketable = #{isMarketable}
            </if>
           <if test="@Ognl@isNotEmpty(isRecomment)">
                AND is_recomment = #{isRecomment}
            </if>
           <if test="@Ognl@isNotEmpty(status)">
                AND status = #{status}
            </if>
           <if test="@Ognl@isNotEmpty(supplierId)">
                AND supplier_id = #{supplierId}
            </if>
           <if test="@Ognl@isNotEmpty(shopId)">
                AND shop_id = #{shopId}
            </if>
           <if test="@Ognl@isNotEmpty(createDate)">
                AND createDate = #{createDate}
            </if>
           <if test="@Ognl@isNotEmpty(updateDate)">
                AND updateDate = #{updateDate}
            </if>
           <if test="@Ognl@isNotEmpty(marque)">
                AND marque = #{marque}
            </if>
           <if test="@Ognl@isNotEmpty(barcode)">
                AND barcode = #{barcode}
            </if>
           <if test="@Ognl@isNotEmpty(roughWeight)">
                AND rough_weight = #{roughWeight}
            </if>
           <if test="@Ognl@isNotEmpty(netWeight)">
                AND net_weight = #{netWeight}
            </if>
           <if test="@Ognl@isNotEmpty(length)">
                AND length = #{length}
            </if>
           <if test="@Ognl@isNotEmpty(width)">
                AND width = #{width}
            </if>
           <if test="@Ognl@isNotEmpty(height)">
                AND height = #{height}
            </if>
           <if test="@Ognl@isNotEmpty(bulk)">
                AND bulk = #{bulk}
            </if>
           <if test="@Ognl@isNotEmpty(hasSku)">
                AND has_sku = #{hasSku}
            </if>
           <if test="@Ognl@isNotEmpty(stockLockType)">
                AND stock_lock_type = #{stockLockType}
            </if>
           <if test="@Ognl@isNotEmpty(province)">
                AND province = #{province}
            </if>
           <if test="@Ognl@isNotEmpty(town)">
                AND town = #{town}
            </if>
           <if test="@Ognl@isNotEmpty(county)">
                AND county = #{county}
            </if>
           <if test="@Ognl@isNotEmpty(produceaddress)">
                AND produceaddress = #{produceaddress}
            </if>
           <if test="@Ognl@isNotEmpty(carriage)">
                AND carriage = #{carriage}
            </if>
           <if test="@Ognl@isNotEmpty(storeId)">
                AND storeId = #{storeId}
            </if>
           <if test="@Ognl@isNotEmpty(categoryId)">
                AND categoryId = #{categoryId}
            </if>
           <if test="@Ognl@isNotEmpty(afterService)">
                AND afterService = #{afterService}
            </if>
           <if test="@Ognl@isNotEmpty(sendProvince)">
                AND sendProvince = #{sendProvince}
            </if>
           <if test="@Ognl@isNotEmpty(sendTown)">
                AND sendTown = #{sendTown}
            </if>
           <if test="@Ognl@isNotEmpty(sendCounty)">
                AND sendCounty = #{sendCounty}
            </if>
           <if test="@Ognl@isNotEmpty(sendAddress)">
                AND sendAddress = #{sendAddress}
            </if>
           <if test="@Ognl@isNotEmpty(minprice)">
                AND minprice = #{minprice}
            </if>
           <if test="@Ognl@isNotEmpty(maxprice)">
                AND maxprice = #{maxprice}
            </if>
           <if test="@Ognl@isNotEmpty(allnum)">
                AND allnum = #{allnum}
            </if>
           <if test="@Ognl@isNotEmpty(sellNum)">
                AND sell_num = #{sellNum}
            </if>
           <if test="@Ognl@isNotEmpty(commentCount)">
                AND comment_count = #{commentCount}
            </if>
           <if test="@Ognl@isNotEmpty(introductionMobile)">
                AND introduction_mobile = #{introductionMobile}
            </if>
           <if test="@Ognl@isNotEmpty(sortNum)">
                AND sortNum = #{sortNum}
            </if>
           <if test="@Ognl@isNotEmpty(limitCnt)">
                AND limit_cnt = #{limitCnt}
            </if>
           <if test="@Ognl@isNotEmpty(areasName)">
                AND areas_name = #{areasName}
            </if>
           <if test="@Ognl@isNotEmpty(areasCode)">
                AND areas_code = #{areasCode}
            </if>
           <if test="@Ognl@isNotEmpty(saleKbn)">
                AND sale_kbn = #{saleKbn}
            </if>
           <if test="@Ognl@isNotEmpty(saleNote)">
                AND sale_note = #{saleNote}
            </if>
           <if test="@Ognl@isNotEmpty(limitKbn)">
                AND limit_kbn = #{limitKbn}
            </if>
           <if test="@Ognl@isNotEmpty(locked)">
                AND locked = #{locked}
            </if>
           <if test="@Ognl@isNotEmpty(lockReason)">
                AND lock_reason = #{lockReason}
            </if>
           <if test="@Ognl@isNotEmpty(welfarePrice)">
                AND welfare_price = #{welfarePrice}
            </if>
           <if test="@Ognl@isNotEmpty(divLevel)">
                AND div_level = #{divLevel}
            </if>
           <if test="@Ognl@isNotEmpty(empPrice)">
                AND emp_price = #{empPrice}
            </if>
           <if test="@Ognl@isNotEmpty(empCash)">
                AND emp_cash = #{empCash}
            </if>
           <if test="@Ognl@isNotEmpty(empLevel)">
                AND emp_level = #{empLevel}
            </if>
           <if test="@Ognl@isNotEmpty(updateTime)">
                AND update_time = #{updateTime}
            </if>
           <if test="@Ognl@isNotEmpty(updateUser)">
                AND update_user = #{updateUser}
            </if>
           <if test="@Ognl@isNotEmpty(updateName)">
                AND update_name = #{updateName}
            </if>
            <if test="@Ognl@isNotEmpty(savestate)">
                AND savestate = #{savestate}
            </if>
            <if test="@Ognl@isNotEmpty(UpdateDesc)">
                AND update_desc = #{updateDesc}
            </if>
        </where>
    </sql>
    
    
    
    <!--批量更新  -->
    <update id="updateProductByids" >
		        UPDATE t_appr_product SET
		        <if test="@Ognl@isNotEmpty(isMarketable)">
		        	is_marketable = #{isMarketable},
		        </if>
		        <choose>
		         <when test="@Ognl@isNotEmpty(status)">
		        	status=#{status},updateDate=now()
		        </when>
		        <otherwise>
		            updateDate=now()
		        </otherwise>
		        </choose>
		        WHERE
			        id in
			  <foreach collection="idslist" item="item"  open="(" separator="," close=")">  
        			#{item}
    		 </foreach>
	</update>
 <resultMap id="ProductThirdPrice" type="com.wode.factory.model.ProductThirdPrice">
        <result property="id" column="id"/>
        <result property="productId" column="product_id"/>
        <result property="thirdType" column="third_type"/>
        <result property="price" column="price"/>
        <result property="itemUrl" column="item_url"/>
        <result property="confrimDate" column="confrim_date"/>
        <result property="lastPrice" column="last_price"/>
        <result property="updateDate" column="update_date"/>
        <result property="urlStatus" column="url_status"/>
    </resultMap>
    <select id="getProductThirdPriceByProductId" resultMap="ProductThirdPrice">
    	SELECT
    		t_product_third_price.id,
    		t_product_third_price.product_id,
    		t_product_third_price.price,
    		t_product_third_price.item_url,
    		t_product_third_price.third_type,
    		t_product_third_price.last_price,
    		t_product_third_price.url_status
    	FROM
    		t_product_third_price 
    	WHERE
    		product_id= #{id} 
    	ORDER BY update_date DESC
    </select>
    <!-- 查询此商家供应商下的商品名称 -->
	<select id="getSupplierapprFullname" resultType="Long">
			SELECT id from t_appr_product
			<![CDATA[
			WHERE supplier_id=#{supplierId} and status < 2  and full_name=#{fullName} limit 1
			]]>
    </select>
  
</mapper>
