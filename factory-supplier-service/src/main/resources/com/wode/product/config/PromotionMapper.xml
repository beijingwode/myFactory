<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="PromotionMapper">

	<resultMap id="Promotion" type="com.wode.factory.model.Promotion">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="orders" column="orders"/>
        <result property="beginDate" column="begin_date"/>
        <result property="endDate" column="end_date"/>
        <result property="introduction" column="introduction"/>
        <result property="freeShipping" column="free_shipping"/>
        <result property="minPrice" column="min_price"/>
        <result property="minQuantity" column="min_quantity"/>
        <result property="exclusive" column="exclusive"/>
        <result property="shopId" column="shop_id"/>
        <result property="rule" column="rule"/>
        <result property="joinTotal" column="join_total"/>
        <result property="status" column="status"/>
        <result property="type" column="type"/>
        <result property="createDate" column="create_date"/>
        <result property="modifyDate" column="modify_date"/>
        <result property="canReturn" column="can_return"/>
        <result property="canReplace" column="can_replace"/>
        <result property="canRepair" column="can_repair"/>
        <result property="notice" column="notice"/>
	</resultMap>
	
	<resultMap id="PromotionProduct" type="com.wode.factory.model.PromotionProduct">
        <result property="id" column="id"/>
        <result property="promotionId" column="promotion_id"/>
        <result property="productId" column="product_id"/>
        <result property="skuId" column="sku_id"/>
        <result property="bigImage" column="big_image"/>
        <result property="smallImage" column="small_image"/>
        <result property="joinQuantity" column="join_quantity"/>
        <result property="joinStart" column="join_start"/>
        <result property="joinEnd" column="join_end"/>
        <result property="maxQuantity" column="max_quantity"/>
        <result property="price" column="price"/>
        <result property="currency" column="currency"/>
        <result property="plusPrice" column="plus_price"/>
        <result property="status" column="status"/>
        <result property="reviewingUserId" column="reviewing_userId"/>
        <result property="reviewingDate" column="reviewing_date"/>
        <result property="shopId" column="shop_id"/>
        <result property="canReturn" column="can_return"/>
        <result property="canReplace" column="can_replace"/>
        <result property="canRepair" column="can_repair"/>
        <result property="createDate" column="create_date"/>
        <result property="modifyDate" column="modify_date"/>
        <result property="fullName" column="full_name"/>
		<result property="skuName" column="skuName"/>
        <result property="reviewedUserId" column="reviewed_userId"/>
        <result property="reviewedDate" column="reviewed_date"/>
        <collection property="promotion" ofType="com.wode.factory.model.Promotion">
        	<result property="name" column="name"/>
        	<result property="joinTotal" column="join_total"/>
        </collection>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,name,orders,begin_date,end_date,introduction,free_shipping,min_price,min_quantity,exclusive,shop_id,rule,join_total,status,type,create_date,modify_date,can_return,can_replace,can_repair,notice
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_promotion (
        	id ,
        	name ,
        	orders ,
        	begin_date ,
        	end_date ,
        	introduction ,
        	free_shipping ,
        	min_price ,
        	min_quantity ,
        	exclusive ,
        	shop_id ,
        	rule ,
        	join_total ,
        	status ,
        	type ,
        	create_date ,
        	modify_date ,
        	can_return ,
        	can_replace ,
        	can_repair ,
        	notice 
        ) VALUES (
        	#{id} ,
        	#{name} ,
        	#{orders} ,
        	#{beginDate} ,
        	#{endDate} ,
        	#{introduction} ,
        	#{freeShipping} ,
        	#{minPrice} ,
        	#{minQuantity} ,
        	#{exclusive} ,
        	#{shopId} ,
        	#{rule} ,
        	#{joinTotal} ,
        	#{status} ,
        	#{type} ,
        	#{createDate} ,
        	#{modifyDate} ,
        	#{canReturn} ,
        	#{canReplace} ,
        	#{canRepair} ,
        	#{notice} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE t_promotion SET
	        name = #{name} ,
	        orders = #{orders} ,
	        begin_date = #{beginDate} ,
	        end_date = #{endDate} ,
	        introduction = #{introduction} ,
	        free_shipping = #{freeShipping} ,
	        min_price = #{minPrice} ,
	        min_quantity = #{minQuantity} ,
	        exclusive = #{exclusive} ,
	        shop_id = #{shopId} ,
	        rule = #{rule} ,
	        join_total = #{joinTotal} ,
	        status = #{status} ,
	        type = #{type} ,
	        create_date = #{createDate} ,
	        modify_date = #{modifyDate} ,
	        can_return = #{canReturn} ,
	        can_replace = #{canReplace} ,
	        can_repair = #{canRepair} ,
	        notice = #{notice} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_promotion WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="Promotion">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_promotion 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM t_promotion 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="Promotion">
    	SELECT <include refid="columns" />
	    FROM t_promotion 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(name)">
				AND name = #{name}
			</if>
	       <if test="@Ognl@isNotEmpty(orders)">
				AND orders = #{orders}
			</if>
	       <if test="@Ognl@isNotEmpty(beginDate)">
				AND begin_date >= #{beginDate}
		   </if>
		   <if test="@Ognl@isNotEmpty(beginDate)">
				AND begin_date &lt;= #{beginDate}
		   </if>
	       <if test="@Ognl@isNotEmpty(endDate)">
				AND end_date >= #{endDate}
		   </if>
		   <if test="@Ognl@isNotEmpty(endDate)">
				AND end_date &lt;= #{endDate}
		   </if>
	       <if test="@Ognl@isNotEmpty(introduction)">
				AND introduction = #{introduction}
			</if>
	       <if test="@Ognl@isNotEmpty(freeShipping)">
				AND free_shipping = #{freeShipping}
			</if>
	       <if test="@Ognl@isNotEmpty(minPrice)">
				AND min_price = #{minPrice}
			</if>
	       <if test="@Ognl@isNotEmpty(minQuantity)">
				AND min_quantity = #{minQuantity}
			</if>
	       <if test="@Ognl@isNotEmpty(exclusive)">
				AND exclusive = #{exclusive}
			</if>
	       <if test="@Ognl@isNotEmpty(shopId)">
				AND shop_id = #{shopId}
			</if>
	       <if test="@Ognl@isNotEmpty(rule)">
				AND rule = #{rule}
			</if>
	       <if test="@Ognl@isNotEmpty(joinTotal)">
				AND join_total = #{joinTotal}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				AND status = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(type)">
				AND type = #{type}
			</if>
	       <if test="@Ognl@isNotEmpty(createDateBegin)">
				AND create_date >= #{createDateBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createDateEnd)">
				AND create_date &lt;= #{createDateEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(modifyDateBegin)">
				AND modify_date >= #{modifyDateBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(modifyDateEnd)">
				AND modify_date &lt;= #{modifyDateEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(canReturn)">
				AND can_return = #{canReturn}
			</if>
	       <if test="@Ognl@isNotEmpty(canReplace)">
				AND can_replace = #{canReplace}
			</if>
	       <if test="@Ognl@isNotEmpty(canRepair)">
				AND can_repair = #{canRepair}
			</if>
	       <if test="@Ognl@isNotEmpty(notice)">
				AND notice = #{notice}
			</if>
		</where>
	</sql>
	
	
	<select id="findByMap" resultMap="Promotion">
		SELECT <include refid="columns" />
		    FROM t_promotion 
	    ORDER BY orders
	    LIMIT #{startnum},#{size}
	</select>
	
	<select id="findAllCount" resultType="Integer">
		SELECT count(*)
	    <![CDATA[
		    FROM t_promotion 
	    ]]>
			WHERE 1 = 1
			<if test="@Ognl@isNotEmpty(type)">
				AND type = #{type}
			</if>
	    ORDER BY orders
	</select>
	
	<select id="findAllProductCount" resultType="Integer">
		SELECT
			count(*)
		FROM
			`t_promotion_product` tpp
		LEFT JOIN t_promotion tp ON tpp.promotion_id = tp.id
		LEFT JOIN t_shop tss ON tpp.shop_id = tss.id
		WHERE
			tss.supplier_id = #{supplierId}
			<if test="@Ognl@isNotEmpty(status)">
				<if test="status == 0">
					AND tpp.status = #{status}
				</if>
				<if test="status == 2">
					<![CDATA[ AND tpp.status = #{status} AND tpp.reviewed_date < #{now}]]>
				</if>
				<if test="status == -1">
					<![CDATA[ AND tpp.status = #{status} AND tpp.reviewed_date < #{now}]]>
				</if>
				<if test="status == 1">
					<![CDATA[ AND (tpp.status = #{status} OR tpp.reviewed_date >= #{now})]]>
				</if>
				<if test="status == -2">
					AND tpp.status = #{status}
				</if>
			</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND tp.type = #{type}
			</if>
	</select>
	
	<select id="findProductByMap" resultMap="PromotionProduct">
		SELECT
			tpp.id,
			tpp.promotion_id,
			tpp.product_id,
			tpp.sku_id,
			tpp.big_image,
			tpp.small_image,
			tpp.join_quantity,
			tpp.join_start,
			tpp.join_end,
			tpp.max_quantity,
			tpp.price,
			tpp.currency,
			tpp.plus_price,
			tpp.status,
			tpp.reviewing_userId,
			tpp.reviewing_date,
			tpp.shop_id,
			tpp.can_return,
			tpp.can_replace,
			tpp.can_repair,
			tpp.create_date,
			tpp.modify_date,
			tpp.reviewed_userId,
			tpp.reviewed_date,
			tp.name,
			tp.join_total,
			tpr.full_name,
			tps.itemValues skuName
		FROM
			`t_promotion_product` tpp
		LEFT JOIN t_promotion tp ON tpp.promotion_id = tp.id
		LEFT JOIN t_shop tss ON tpp.shop_id = tss.id
		LEFT JOIN t_product tpr ON tpp.product_id = tpr.id
		LEFT JOIN t_product_specifications tps ON tps.id = tpp.sku_id
		WHERE
			tss.supplier_id = #{supplierId}
			<if test="@Ognl@isNotEmpty(status)">
				<if test="status == 0">
					AND tpp.status = #{status} AND tpp.join_start >NOW()
				</if>
				<if test="status == 2">
					<![CDATA[ AND tpp.status = #{status} AND tpp.reviewed_date < #{now}]]>
				</if>
				<if test="status == -1">
					<![CDATA[ AND tpp.status = #{status} AND tpp.reviewed_date < #{now}]]>
				</if>
				<if test="status == 1">
					<!-- <![CDATA[ AND (tpp.status = #{status} OR tpp.reviewed_date >= #{now})]]> -->
					<![CDATA[ AND (tpp.status = #{status} OR (tpp.reviewed_date < #{now} AND tpp.status!=-2))]]>

				</if>
				<if test="status == -2">
					AND tpp.status = #{status}
				</if>
			</if>
			<if test="@Ognl@isNotEmpty(status2)">
				AND tpp.status >= 0
				AND tpp.join_start > now()
			</if>
			<if test="@Ognl@isNotEmpty(type)">
				AND tp.type = #{type}
			</if>
			ORDER BY tpp.join_start DESC
	    	LIMIT #{startnum},#{size}
	</select>
	
	
</mapper>

