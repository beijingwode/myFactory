<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="SaleDetailMapper">

	<resultMap id="SaleDetail" type="com.wode.factory.model.SaleDetail">
        <result property="id" column="id"/>
        <result property="subOrderId" column="subOrderId"/>
        <result property="subOrderItemId" column="subOrderItemId"/>
        <result property="saleBillId" column="saleBillId"/>
        <result property="payTime" column="payTime"/>
        <result property="takeTime" column="takeTime"/>
        <result property="returnTime" column="returnTime"/>
        <result property="own" column="own"/>
        <result property="productId" column="productId"/>
        <result property="productName" column="productName"/>
        <result property="skuId" column="skuId"/>
        <result property="categoryId" column="categoryId"/>
        <result property="categoryName" column="categoryName"/>
        <result property="price" column="price"/>
        <result property="number" column="number"/>
        <result property="allPrice" column="allPrice"/>
        <result property="commissionRatio" column="commissionRatio"/>
        <result property="commission" column="commission"/>
        <result property="payPrice" column="payPrice"/>
        <result property="realPrice" column="realPrice"/>
        <result property="carriagePrice" column="carriagePrice"/>
        <result property="status" column="status"/>
        <result property="haveCheap" column="haveCheap"/>
        <result property="fuCoin" column="fuCoin"/>
        <result property="createTime" column="createTime"/>
        <result property="createUserid" column="createUserid"/>
        <result property="isDelete" column="isDelete"/>
        <result property="salePrice" column="sale_price"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,subOrderId,subOrderItemId,saleBillId,payTime,takeTime,returnTime,own,productId,productName,skuId,categoryId,categoryName,price,number,allPrice,commissionRatio,commission,payPrice,realPrice,carriagePrice,status,haveCheap,fuCoin,createTime,createUserid,isDelete,sale_price
	    ]]>
	</sql>
    
	<update id="update" >
    <![CDATA[
        UPDATE t_sale_detail SET
	        subOrderId = #{subOrderId} ,
	        saleBillId = #{saleBillId},
	        payTime = #{payTime} ,
	        takeTime = #{takeTime} ,
	        returnTime = #{returnTime} ,
	        own = #{own} ,
	        productId = #{productId} ,
	        productName = #{productName} ,
	        skuId = #{skuId} ,
	        categoryId = #{categoryId} ,
	        categoryName = #{categoryName} ,
	        price = #{price} ,
	        number = #{number} ,
	        allPrice = #{allPrice} ,
	        commissionRatio = #{commissionRatio} ,
	        commission = #{commission} ,
	        payPrice = #{payPrice} ,
	        realPrice=#{realPrice} ,
        	carriagePrice = #{carriagePrice} ,
	        status = #{status} ,
	        haveCheap = #{haveCheap} ,
	        fuCoin = #{fuCoin} ,
	        createTime = #{createTime} ,
	        createUserid = #{createUserid} ,
	        isDelete = #{isDelete} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_sale_detail WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="SaleDetail">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_sale_detail 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM t_sale_detail 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="SaleDetail">
    	SELECT <include refid="columns" />
	    FROM t_sale_detail 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

    <!-- 查询list分页 -->
    <select id="findlistPageCount" resultType="long">
        SELECT count(*) FROM t_sale_detail 
		<include refid="findPage_where"/>   
    </select>
    <select id="findlistPage" resultMap="SaleDetail">
    	SELECT <include refid="columns" />
	    FROM t_sale_detail 
		<include refid="findPage_where"/>
		ORDER BY createTime,subOrderId,status DESC,subOrderItemId
		
    </select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(subOrderId)">
				AND subOrderId = #{subOrderId}
			</if>
			<if test="@Ognl@isNotEmpty(saleBillId)">
				AND saleBillId = #{saleBillId}
			</if>
	       <if test="@Ognl@isNotEmpty(payTimeBegin)">
				AND payTime >= #{payTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(payTimeEnd)">
				AND payTime &lt;= #{payTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(takeTimeBegin)">
				AND takeTime >= #{takeTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(takeTimeEnd)">
				AND takeTime &lt;= #{takeTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(returnTimeBegin)">
				AND returnTime >= #{returnTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(returnTimeEnd)">
				AND returnTime &lt;= #{returnTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(own)">
				AND own = #{own}
			</if>
	       <if test="@Ognl@isNotEmpty(productId)">
				AND productId = #{productId}
			</if>
	       <if test="@Ognl@isNotEmpty(productName)">
				AND productName = #{productName}
			</if>
	       <if test="@Ognl@isNotEmpty(skuId)">
				AND skuId = #{skuId}
			</if>
	       <if test="@Ognl@isNotEmpty(categoryId)">
				AND categoryId = #{categoryId}
			</if>
	       <if test="@Ognl@isNotEmpty(categoryName)">
				AND categoryName = #{categoryName}
			</if>
	       <if test="@Ognl@isNotEmpty(price)">
				AND price = #{price}
			</if>
	       <if test="@Ognl@isNotEmpty(number)">
				AND number = #{number}
			</if>
	       <if test="@Ognl@isNotEmpty(allPrice)">
				AND allPrice = #{allPrice}
			</if>
	       <if test="@Ognl@isNotEmpty(commissionRatio)">
				AND commissionRatio = #{commissionRatio}
			</if>
	       <if test="@Ognl@isNotEmpty(commission)">
				AND commission = #{commission}
			</if>
	       <if test="@Ognl@isNotEmpty(payPrice)">
				AND payPrice = #{payPrice}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				AND status = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(haveCheap)">
				AND haveCheap = #{haveCheap}
			</if>
	       <if test="@Ognl@isNotEmpty(fuCoin)">
				AND fuCoin = #{fuCoin}
			</if>
	       <if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND createTime >= #{createTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND createTime &lt;= #{createTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(createUserid)">
				AND createUserid = #{createUserid}
			</if>
	       <if test="@Ognl@isNotEmpty(isDelete)">
				AND isDelete = #{isDelete}
			</if>
		</where>
	</sql>
	
</mapper>

