<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.wode.factory.mapper.CategoryWeekStatisticalDao">

    <resultMap id="CategoryWeekStatistical" type="com.wode.factory.model.CategoryWeekStatistical">
        <result property="id" column="id"/>
        <result property="categoryId" column="category_id"/>
        <result property="day" column="day"/>
        <result property="creatTime" column="creat_time"/>
        <result property="brandNo" column="brandNo"/>
        <result property="nameEN" column="nameEN"/>
        <result property="name" column="name"/>
        <result property="naturall" column="naturall"/>
        <result property="importFlg" column="import_flg"/>
        <result property="createDate" column="createDate"/>
        <result property="pbLevel" column="pbLevel"/>
        <result property="supplierName" column="supplierName"/>
        <result property="property" column="property"/>
        <result property="managerName" column="managerName"/>
        <result property="sale" column="sale"/>
        <result property="useFlg" column="use_flg"/>
        <result property="createDatef" column="createDatef"/>
        <result property="proCnt" column="proCnt"/>
        <result property="exp1" column="exp1"/>
        <result property="exp2" column="exp2"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[
        id,category_id,day,creat_time,brandNo,nameEN,`name`,naturall,`import_flg`,createDate,pbLevel,supplierName,property,proCnt,managerName,sale,use_flg,createDatef,exp1,exp2
        ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_category_week_statistical (
            id ,
            category_id ,
            day ,
            creat_time ,
            brandNo ,
            nameEN ,
            name ,
            naturall ,
            import_flg ,
            createDate ,
            pbLevel ,
            supplierName ,
            property ,
            managerName ,
            sale ,
            use_flg ,
            createDatef,
            proCnt,
            exp1 ,
            exp2 
        ) VALUES (
            #{id} ,
            #{categoryId} ,
            #{day} ,
            #{creatTime} ,
            #{brandNo} ,
            #{nameEN} ,
            #{name} ,
            #{naturall} ,
            #{importFlg} ,
            #{createDate} ,
            #{pbLevel} ,
            #{supplierName} ,
            #{property} ,
            #{managerName} ,
            #{sale} ,
            #{useFlg} ,
            #{createDatef},
            #{proCnt},
            #{exp1} ,
            #{exp2} 
        )
    ]]>
    </insert>
    <insert id="insertByCategory">
    <![CDATA[
        INSERT INTO t_category_week_statistical (id ,
           	day,
           	creat_time,
            category_id ,
            brandNo ,
            name ,
            nameEN ,
            supplierName ,
            createDate ,
            createDatef,
            managerName ,
            pbLevel ,
            proCnt,
            sale ,
            naturall ,
            import_flg ,
            property ,
            use_flg) 
		SELECT nextval('t_category_week_statistical') id,now() `day`,now() creat_time,
		A.*,1 use_flg FROM (
		SELECT DISTINCT bpt.category_id,brand.brandNo,brand.`name`,brand.nameEN,brand.supplierName,brand.createDate,brand.createDatef,brand.managerName,brand.pbLevel,
		brand.proCnt,brand.sale,naturall,importFlg,property
		from t_brand_producttype bpt
		INNER JOIN (
		select pb.id,pb.brandNo ,pb.`name`,pb.nameEN,case WHEN pb.`natural`=0 THEN '自有' ELSE '代理' end naturall,case WHEN pb.import_flg=1 THEN '进口' else '非进口' end importFlg,pb.createDate createDate,pb.category_id pbLevel,
		s.id supplierId, s.com_name supplierName,case s.property when 1 then '品牌商' when 2 then '代理商' else '生产厂商' end property ,s.manager_name managerName
		,ps.proCnt,FORMAT(ps.allSale,2) sale,ps.createDatef createDatef
		from t_product_brand pb 
		INNER JOIN t_supplier s ON (s.id = pb.supplier_id and s.creat_time > '2015-12-01' and s.status >=4)
		INNER JOIN t_shop ss on (ss.id=pb.shop_id AND ss.supplier_id = pb.supplier_id)
		LEFT JOIN (
		SELECT p.brand_id,min(p.createDate) createDatef, count(p.id) proCnt, (sum(sku.price)-sum(sku.maxFucoin))*10 / sum(sku.price) allSale
		FROM t_product p
		INNER JOIN t_product_specifications sku ON (sku.product_id=p.id and sku.isDelete=0)
		WHERE p.is_marketable=1 
		GROUP BY p.brand_id
		) ps ON (ps.brand_id = pb.id)
		WHERE pb.is_delete = 0) brand ON(brand.id=bpt.brand_id and brand.supplierId=bpt.supplier_id) where bpt.category_id=#{categoryId}) A
		]]>
    </insert>
	<update id="updateByCategory"	>
		<![CDATA[
		UPDATE t_category_week_statistical SET
            use_flg = 0
         WHERE category_id=#{categoryId} AND use_flg=1
		]]>
	</update>
    <update id="update" >
    <![CDATA[
        UPDATE t_category_week_statistical SET            
            category_id = #{categoryId} ,
            day = #{day} ,
            creat_time = #{creatTime} ,
            brandNo = #{brandNo} ,
            nameEN = #{nameEN} ,
            name = #{name} ,
            naturall = #{naturall} ,
            import_flg = #{importFlg} ,
            createDate = #{createDate} ,
            pbLevel = #{pbLevel} ,
            supplierName = #{supplierName} ,
            property = #{property} ,
            managerName = #{managerName} ,
            sale = #{sale} ,
            createDatef = #{createDatef}, 
            use_flg = #{useFlg} ,
            proCnt = #{proCnt},
            exp1 = #{exp1} ,
            exp2 = #{exp2} 
        WHERE 
            id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_category_week_statistical WHERE
        id = #{id} 
    ]]>
    </delete>
    <select id="getById" resultMap="CategoryWeekStatistical">
        SELECT <include refid="columns" />
        <![CDATA[
            FROM t_category_week_statistical 
            WHERE 
                id = #{id} 
        ]]>
    </select>

    <select id="selectByModel" resultMap="CategoryWeekStatistical">
        SELECT <include refid="columns" /> FROM t_category_week_statistical 
        <include refid="find_where"/>
    </select>
	
    <sql id="find_where">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
           <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id}
            </if>
           <if test="@Ognl@isNotEmpty(categoryId)">
                AND category_id = #{categoryId}
            </if>
           <if test="@Ognl@isNotEmpty(day)">
                AND day = #{day}
            </if>
           <if test="@Ognl@isNotEmpty(creatTime)">
                AND creat_time = #{creatTime}
            </if>
           <if test="@Ognl@isNotEmpty(brandNo)">
                AND brandNo = #{brandNo}
            </if>
           <if test="@Ognl@isNotEmpty(nameEN)">
                AND nameEn = #{nameEN}
            </if>
           <if test="@Ognl@isNotEmpty(name)">
                AND name = #{name}
            </if>
           <if test="@Ognl@isNotEmpty(naturall)">
                AND naturall = #{naturall}
            </if>
           <if test="@Ognl@isNotEmpty(importFlg)">
                AND import_flg = #{importFlg}
            </if>
           <if test="@Ognl@isNotEmpty(createDate)">
                AND createDate = #{createDate}
            </if>
           <if test="@Ognl@isNotEmpty(pbLevel)">
                AND pbLevel = #{pbLevel}
            </if>
           <if test="@Ognl@isNotEmpty(supplierName)">
                AND supplierName = #{supplierName}
            </if>
           <if test="@Ognl@isNotEmpty(property)">
                AND property = #{property}
            </if>
           <if test="@Ognl@isNotEmpty(managerName)">
                AND managerName = #{managerName}
            </if>
           <if test="@Ognl@isNotEmpty(sale)">
                AND sale = #{sale}
            </if>
           <if test="@Ognl@isNotEmpty(useFlg)">
                AND use_flg = #{useFlg}
            </if>
            <if test="@Ognl@isNotEmpty(createDatef)">
                AND createDatef = #{createDatef}
            </if>
            <if test="@Ognl@isNotEmpty(proCnt)">
                AND proCnt = #{proCnt}
            </if>
           <if test="@Ognl@isNotEmpty(exp1)">
                AND exp1 = #{exp1}
            </if>
           <if test="@Ognl@isNotEmpty(exp2)">
                AND exp2 = #{exp2}
            </if>
        </where>
    </sql>

</mapper>
