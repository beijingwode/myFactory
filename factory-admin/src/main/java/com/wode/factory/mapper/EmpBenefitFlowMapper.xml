<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wode.factory.mapper.EmpBenefitFlowDao" >
  <resultMap id="BaseResultMap" type="com.wode.factory.model.EmpBenefitFlow" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="emp_id" property="empId" jdbcType="BIGINT" />
    <result column="op_date" property="opDate" jdbcType="TIMESTAMP" />
    <result column="op_code" property="opCode" jdbcType="CHAR" />
    <result column="ticket" property="ticket" jdbcType="DECIMAL" />
    <result column="ticket_balance" property="ticketBalance" jdbcType="DECIMAL" />
    <result column="cash" property="cash" jdbcType="DECIMAL" />
    <result column="cash_balance" property="cashBalance" jdbcType="DECIMAL" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="key_id" property="keyId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="enterprise_id" property="enterpriseId" jdbcType="BIGINT" />
    <result column="emp_name" property="empName" jdbcType="VARCHAR" />
    <result column="ex_benefit_type" property="exBenefitType" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="EmpBenefitFlowVo" type="com.wode.factory.vo.EmpBenefitFlowVo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="emp_id" property="empId" jdbcType="BIGINT" />
    <result column="op_date" property="opDate" jdbcType="TIMESTAMP" />
    <result column="op_code" property="opCode" jdbcType="CHAR" />
    <result column="ticket" property="ticket" jdbcType="DECIMAL" />
    <result column="ticket_balance" property="ticketBalance" jdbcType="DECIMAL" />
    <result column="cash" property="cash" jdbcType="DECIMAL" />
    <result column="cash_balance" property="cashBalance" jdbcType="DECIMAL" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="key_id" property="keyId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="enterprise_id" property="enterpriseId" jdbcType="BIGINT" />
    <result column="emp_name" property="empName" jdbcType="VARCHAR" />
    <result column="ex_benefit_type" property="exBenefitType" jdbcType="CHAR" />
  </resultMap>
  
  <sql id="columns" >
    id, emp_id, op_date, op_code, ticket, ticket_balance, cash, cash_balance, note, key_id, 
    user_name, enterprise_id, emp_name,ex_benefit_type
  </sql>
  
  <insert id="insert" parameterType="com.wode.factory.model.EmpBenefitFlow" >
    insert into t_emp_benefit_flow (id, emp_id, op_date, 
      op_code, ticket, ticket_balance, 
      cash, cash_balance, note, 
      key_id, user_name, enterprise_id, 
      emp_name)
    values (#{id,jdbcType=BIGINT}, #{empId,jdbcType=BIGINT}, #{opDate,jdbcType=TIMESTAMP}, 
      #{opCode,jdbcType=CHAR}, #{ticket,jdbcType=DECIMAL}, #{ticketBalance,jdbcType=DECIMAL}, 
      #{cash,jdbcType=DECIMAL}, #{cashBalance,jdbcType=DECIMAL}, #{note,jdbcType=VARCHAR}, 
      #{keyId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{enterpriseId,jdbcType=BIGINT}, 
      #{empName,jdbcType=VARCHAR})
  </insert>
  
  
    <select id="selectByModel" resultMap="BaseResultMap">
        SELECT <include refid="columns" /> FROM t_emp_benefit_flow 
        <include refid="find_where"/>
        ORDER BY op_date DESC,id DESC
    </select>

    <select id="selectByMap" resultMap="EmpBenefitFlowVo">
        SELECT <include refid="columns" /> FROM t_emp_benefit_flow 
        <include refid="find_where"/>        
		<if test="@Ognl@isNotEmpty(startDate)">
			AND op_date >= #{startDate}
	   </if>
	   <if test="@Ognl@isNotEmpty(endDate)">
			AND op_date &lt;= #{endDate}
	   </if>
        ORDER BY op_date DESC,id DESC
    </select>
    
    <sql id="find_where">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
        	emp_id &lt;> 1665783063840203 AND emp_id &lt;> 1795658443229012
           <if test="@Ognl@isNotEmpty(empId)">
                AND emp_id = #{empId}
           </if>
           <if test="@Ognl@isNotEmpty(opCode)">
                AND op_code = #{opCode}
            </if>
           <if test="@Ognl@isNotEmpty(exBenefitType)">
                AND ex_benefit_type = #{exBenefitType}
            </if>
           <if test="@Ognl@isNotEmpty(ticket)">
                AND ticket > #{ticket}
           </if>
           <if test="@Ognl@isNotEmpty(cash)">
                AND cash > #{cash}
           </if>
           <if test="@Ognl@isNotEmpty(keyId)">
                AND key_id like CONCAT(CONCAT('%',#{keyId}),'%')
           </if>
        </where>
    </sql>
  
</mapper>