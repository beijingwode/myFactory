<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.wode.factory.mapper.EntBenefitApprDao">

	<resultMap id="EntBenefitAppr" type="com.wode.factory.model.EntBenefitAppr">
        <result property="id" column="id"/>
        <result property="enterpriseId" column="enterprise_id"/>
        <result property="applyLimit" column="apply_limit"/>
        <result property="status" column="status"/>
        <result property="curYear" column="cur_year"/>
        <result property="curSeason" column="cur_season"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="updateUser" column="update_user"/>
	</resultMap>
	
	<resultMap id="EntBenefitApprVO" type="com.wode.factory.vo.EntBenefitApprVO" extends="EntBenefitAppr">
        <result property="enterpriseName" column="enterpriseName"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,enterprise_id,apply_limit,status,cur_year,cur_season,create_date,update_date,update_user
	    ]]>
	</sql>
	
	<sql id="column">
	    <![CDATA[
		name enterpriseName,eba.id,eba.enterprise_id,eba.apply_limit,eba.status,eba.cur_year,eba.cur_season,eba.create_date,eba.update_date,eba.update_user
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_ent_benefit_appr (
        	id ,
        	enterprise_id ,
        	apply_limit ,
        	status ,
        	cur_year ,
        	cur_season ,
        	create_date ,
        	update_date ,
        	update_user 
        ) VALUES (
        	#{id} ,
        	#{enterpriseId} ,
        	#{applyLimit} ,
        	#{status} ,
        	#{curYear} ,
        	#{curSeason} ,
        	#{createDate} ,
        	#{updateDate} ,
        	#{updateUser} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE t_ent_benefit_appr SET
	        enterprise_id = #{enterpriseId} ,
	        apply_limit = #{applyLimit} ,
	        status = #{status} ,
	        cur_year = #{curYear} ,
	        cur_season = #{curSeason} ,
	        create_date = #{createDate} ,
	        update_date = #{updateDate} ,
	        update_user = #{updateUser} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>
	
	<update id="updateSelect" >
        UPDATE t_ent_benefit_appr
        <set>
	       <if test="@Ognl@isNotEmpty(enterpriseId)">
				enterprise_id = #{enterpriseId},
			</if>
	       <if test="@Ognl@isNotEmpty(applyLimit)">
				apply_limit = #{applyLimit},
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				status = #{status},
			</if>
	       <if test="@Ognl@isNotEmpty(curYear)">
				cur_year = #{curYear},
			</if>
	       <if test="@Ognl@isNotEmpty(curSeason)">
				cur_season = #{curSeason},
			</if>
	       <if test="@Ognl@isNotEmpty(createDate)">
				create_date = #{createDate},
		   </if>
	       <if test="@Ognl@isNotEmpty(updateDate)">
				update_date = #{updateDate},
		   </if>
	       <if test="@Ognl@isNotEmpty(updateUser)">
				update_user = #{updateUser}
			</if>
	       </set>
        WHERE 
	        id = #{id} 
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_ent_benefit_appr WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="EntBenefitAppr">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_ent_benefit_appr 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM t_ent_benefit_appr 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="EntBenefitApprVO">
    	SELECT <include refid="column" />
	    FROM t_ent_benefit_appr eba INNER JOIN t_enterprise e ON eba.enterprise_id = e.id  INNER JOIN (select id S_id,manager_id FROM t_supplier) s ON (s.S_id= e.id) 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		<if test="@Ognl@isNotEmpty(order)">
			 ${order}
		</if>
    </select>

	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(enterpriseId)">
				AND enterprise_id = #{enterpriseId}
			</if>
	       <if test="@Ognl@isNotEmpty(applyLimit)">
				AND apply_limit = #{applyLimit}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				AND status = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(curYear)">
				AND cur_year = #{curYear}
			</if>
	       <if test="@Ognl@isNotEmpty(curSeason)">
				AND cur_season = #{curSeason}
			</if>
	       <if test="@Ognl@isNotEmpty(startDate)">
				AND create_date >= #{startDate}
		   </if>
		   <if test="@Ognl@isNotEmpty(endDate)">
				AND create_date &lt;= #{endDate}
		   </if>
	       <if test="@Ognl@isNotEmpty(updateDateBegin)">
				AND update_date >= #{updateDateBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(updateDateEnd)">
				AND update_date &lt;= #{updateDateEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(updateUser)">
				AND update_user = #{updateUser}
			</if>
		   <if test="@Ognl@isNotEmpty(managerId)">
				AND s.manager_id= #{managerId}
		   </if>
		</where>
	</sql>
	
</mapper>

