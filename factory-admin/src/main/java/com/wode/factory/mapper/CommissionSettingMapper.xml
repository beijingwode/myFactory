<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="CommissionSettingMapper">

	<resultMap id="CommissionSetting" type="com.wode.tongji.model.CommissionSetting">
        <result property="id" column="id"/>
        <result property="commission" column="commission"/>
        <result property="categoryId" column="category_id"/>
        <result property="creatTime" column="creat_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="brandname" column="brandname"/>
        <result property="categoryname" column="categoryname"/>
        <result property="preferential" column="preferential"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,commission,category_id,creat_time,update_time,preferential
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_commission_setting (
        	id ,
        	commission ,
        	category_id ,
        	creat_time ,
        	update_time 
        ) VALUES (
        	#{id} ,
        	#{commission} ,
        	#{categoryId} ,
        	#{creatTime} ,
        	#{updateTime} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE t_commission_setting SET
	        commission = #{commission} ,
	        category_id = #{categoryId} ,
	        creat_time = #{creatTime} ,
	        update_time = #{updateTime} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_commission_setting WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="CommissionSetting">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_commission_setting 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<select id="getByCategory" resultMap="CommissionSetting">
		SELECT
			pb.`name` brandname,
			pc.`name` categoryname,
			cs.commission
		FROM
			t_brand_producttype bpt
		LEFT JOIN t_product_brand pb ON bpt.brand_id = pb.id
		LEFT JOIN t_product_category pc ON bpt.category_id = pc.id
		LEFT JOIN t_commission_setting cs ON bpt.category_id = cs.category_id
		WHERE
			bpt.supplier_id = #{supplerId} 
		LIMIT #{startnum},#{size}
	</select>
	
	<select id="getBySupplerIdCount" resultType="Integer">
		SELECT
			count(*)
		FROM
			t_brand_producttype bpt
		LEFT JOIN t_product_brand pb ON bpt.brand_id = pb.id
		LEFT JOIN t_product_category pc ON bpt.category_id = pc.id
		LEFT JOIN t_commission_setting cs ON bpt.category_id = cs.category_id
		WHERE
			bpt.supplier_id = #{supplerId} 
	</select>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM t_commission_setting 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="CommissionSetting">
    	SELECT <include refid="columns" />
	    FROM t_commission_setting 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(commission)">
				AND commission = #{commission}
			</if>
	       <if test="@Ognl@isNotEmpty(categoryId)">
				AND category_id = #{categoryId}
			</if>
	       <if test="@Ognl@isNotEmpty(creatTimeBegin)">
				AND creat_time >= #{creatTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(creatTimeEnd)">
				AND creat_time &lt;= #{creatTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(updateTimeBegin)">
				AND update_time >= #{updateTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(updateTimeEnd)">
				AND update_time &lt;= #{updateTimeEnd}
		   </if>
		</where>
	</sql>
	
</mapper>

