<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.wode.factory.mapper.SupplierSaleCodeManageDao">

	<resultMap id="SupplierSaleCodeManage" type="com.wode.factory.model.SupplierSaleCodeManage">
        <result property="supplierId" column="supplier_id"/>
        <result property="yearMonth" column="yearMonth"/>
        <result property="code" column="code"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		supplier_id,yearMonth,code
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="supplierId">
    <![CDATA[
        INSERT INTO m_supplier_sale_code_manage (
        	supplier_id ,
        	yearMonth ,
        	code 
        ) VALUES (
        	#{supplierId} ,
        	#{yearMonth} ,
        	#{code} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE m_supplier_sale_code_manage SET
	        yearMonth = #{yearMonth} ,
	        code = #{code} 
        WHERE 
	        supplier_id = #{supplierId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM m_supplier_sale_code_manage WHERE
        supplier_id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="SupplierSaleCodeManage">
		SELECT supplier_id,t.yearMonth,t.code
		    FROM m_supplier_sale_code_manage t 
	        WHERE supplier_id = #{id} 
	</select>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM m_supplier_sale_code_manage 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="SupplierSaleCodeManage">
    	SELECT <include refid="columns" />
	    FROM m_supplier_sale_code_manage 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(supplierId)">
				AND supplier_id = #{supplierId}
			</if>
	       <if test="@Ognl@isNotEmpty(yearMonth)">
				AND yearMonth = #{yearMonth}
			</if>
	       <if test="@Ognl@isNotEmpty(code)">
				AND 'code' = #{code}
			</if>
		</where>
	</sql>
	
</mapper>

