<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.wode.factory.mapper.AttributeOptionDao">

	<resultMap id="AttributeOption" type="com.wode.factory.model.AttributeOption">
        <result property="id" column="id"/>
        <result property="attributeId" column="attributeId"/>
        <result property="name" column="name"/>
        <result property="orders" column="orders"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,attributeId,name,orders
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_attribute_option (
        	id ,
        	attributeId ,
        	name ,
        	orders 
        ) VALUES (
        	#{id} ,
        	#{attributeId} ,
        	#{name} ,
        	#{orders} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE t_attribute_option SET
	        attributeId = #{attributeId} ,
	        name = #{name} ,
	        orders = #{orders} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>
    <update id="batchUpdate" parameterType="list">
            update t_attribute_option
            <trim prefix="set" suffixOverrides=",">
             <trim prefix="name =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.name!=null">
                          when id=#{i.id} then #{i.name}
                         </if>
                 </foreach>
              </trim>
              <trim prefix=" attributeId =case" suffix="end,">
                 <foreach collection="list" item="i" index="index">
                         <if test="i.attributeId!=null">
                          when id=#{i.id} then #{i.attributeId}
                         </if>
                 </foreach>
              </trim>
              
              <trim prefix="orders =case" suffix="end," >
                 <foreach collection="list" item="i" index="index">
                         <if test="i.orders!=null">
                          when id=#{i.id} then #{i.orders}
                         </if>
                 </foreach>
              </trim>
             </trim>
            where
            <foreach collection="list" separator="or" item="i" index="index" >
              id=#{i.id}
          </foreach>
          </update>
    
    <insert id="batchAdd" parameterType="java.util.List">
    INSERT INTO t_attribute_option (attributeId,name)
    VALUES 
    <foreach collection="list" item="item" index="index" separator="," >
        (#{item.attributeId},#{item.name})
    </foreach>
	</insert>
     
    <delete id="delete">
    <![CDATA[
        DELETE FROM t_attribute_option WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <delete id="deleteList">
    
     <![CDATA[
        delete from t_attribute_option where id in
      ]]>
		<foreach collection="list" item="item" open="(" separator=","
			close=")">
			#{item}
		</foreach>
    </delete>
    
    <select id="getById" resultMap="AttributeOption">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_attribute_option 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
    <select id="findList" resultMap="AttributeOption">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_attribute_option 
	        WHERE 
		        attributeId = #{id} 
	    ]]>
	</select>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM t_attribute_option 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="AttributeOption">
    	SELECT <include refid="columns" />
	    FROM t_attribute_option 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(attributeId)">
				AND attributeId = #{attributeId}
			</if>
	       <if test="@Ognl@isNotEmpty(name)">
				AND name = #{name}
			</if>
	       <if test="@Ognl@isNotEmpty(orders)">
				AND orders = #{orders}
			</if>
		</where>
	</sql>
	
</mapper>

