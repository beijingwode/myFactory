<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.wode.factory.mapper.CheckReviewDao">

    <resultMap id="CheckReview" type="com.wode.factory.model.CheckReview">
        <result property="id" column="id"/>
        <result property="objKey" column="obj_key"/>
        <result property="memo" column="memo"/>
        <result property="alarmDate" column="alarm_date"/>
        <result property="option1" column="option1"/>
        <result property="option2" column="option2"/>
        <result property="option3" column="option3"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createTime" column="create_time"/>
        <result property="createUser" column="create_user"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[
        id,obj_key,memo,alarm_date,option1,option2,option3,is_delete,create_time,create_user
        ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_check_review (
            id ,
            obj_key ,
            memo ,
            alarm_date ,
            option1 ,
            option2 ,
            option3 ,
            create_time ,
            create_user
        ) VALUES (
            #{id} ,
            #{objKey} ,
            #{memo} ,
            #{alarmDate} ,
            #{option1} ,
            #{option2} ,
            #{option3} ,
            #{createTime} ,
            #{createUser}
        )
    ]]>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE t_check_review SET            
            obj_key = #{objKey} ,
            memo = #{memo} ,
            alarm_date = #{alarmDate} ,
            option1 = #{option1} ,
            option2 = #{option2} ,
            option3 = #{option3} ,
            is_delete = #{isDelete} ,
            create_time = #{createTime} ,
            create_user = #{createUser} 
        WHERE 
            id = #{id} 
    ]]>
    </update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM t_check_review WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <delete id="deleteByAppr">
    <![CDATA[
        DELETE FROM t_check_review WHERE obj_key in (
        select pb.id from t_product_brand pb INNER JOIN t_appr_shop ss ON (ss.shop_id = pb.shop_id) where ss.id=#{apprId} 
        )
    ]]>
    </delete>
    
    <select id="getById" resultMap="CheckReview">
        SELECT <include refid="columns" />
        <![CDATA[
            FROM t_check_review 
            WHERE 
                id = #{id} 
        ]]>
    </select>

    <select id="selectByModel" resultMap="CheckReview">
        SELECT <include refid="columns" /> FROM t_check_review 
        <include refid="find_where"/>
    </select>

    <sql id="find_where">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
           <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id}
            </if>
           <if test="@Ognl@isNotEmpty(objKey)">
                AND obj_key = #{objKey}
            </if>
           <if test="@Ognl@isNotEmpty(memo)">
                AND memo = #{memo}
            </if>
           <if test="@Ognl@isNotEmpty(alarmDate)">
                AND alarm_date = #{alarmDate}
            </if>
           <if test="@Ognl@isNotEmpty(option1)">
                AND option1 = #{option1}
            </if>
           <if test="@Ognl@isNotEmpty(option2)">
                AND option2 = #{option2}
            </if>
           <if test="@Ognl@isNotEmpty(option3)">
                AND option3 = #{option3}
            </if>
           <if test="@Ognl@isNotEmpty(isDelete)">
                AND is_delete = #{isDelete}
            </if>
           <if test="@Ognl@isNotEmpty(createTime)">
                AND create_time = #{createTime}
            </if>
           <if test="@Ognl@isNotEmpty(createUser)">
                AND create_user = #{createUser}
            </if>
        </where>
    </sql>

</mapper>
