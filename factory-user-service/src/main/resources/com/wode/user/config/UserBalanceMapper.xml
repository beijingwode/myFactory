<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="UserBalanceMapper">

	<resultMap id="UserBalance" type="com.wode.factory.model.UserBalance">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="currencyId" column="currency_id"/>
        <result property="balance" column="balance"/>
        <result property="balanceTotal" column="balance_total"/>
        <result property="state" column="state"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,user_id,currency_id,balance,balance_total,state
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_user_balance (
        	id ,
        	user_id ,
        	currency_id ,
        	balance ,
        	balance_total,
        	state
        ) VALUES (
        	#{id} ,
        	#{userId} ,
        	#{currencyId} ,
        	#{balance},
        	#{balanceTotal} ,
        	#{state}
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	

<update id="update" >
    <![CDATA[
        UPDATE t_user_balance SET
	        balance = #{balance} ,
	        balance_total = #{balanceTotal}
        WHERE 
	         user_id = #{userId} and
	        currency_id = #{currencyId} 
    ]]>
	</update>
	
	
    <delete id="delete">
    <![CDATA[
        DELETE FROM t_user_balance WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="UserBalance">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_user_balance 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM t_user_balance 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="UserBalance">
    	SELECT <include refid="columns" />
	    FROM t_user_balance 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				AND user_id = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(currencyId)">
				AND currency_id = #{currencyId}
			</if>
	       <if test="@Ognl@isNotEmpty(balance)">
				AND balance = #{balance}
			</if>
			<if test="@Ognl@isNotEmpty(balanceTotal)">
				AND balance_total = #{balanceTotal}
			</if>
			
		</where>
	</sql>
	<select id="findByUser" resultMap="UserBalance">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_user_balance 
	        WHERE 
		        user_id = #{userId} 
	    ]]>
	</select>
	<select id="findByUser1" resultMap="UserBalance">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_user_balance 
	        WHERE 
		        user_id = #{userId} 
		    AND currency_id = 0
	    ]]>
	</select>
	<select id="findByUserAndCurrency" resultMap="UserBalance">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_user_balance 
	        WHERE 
		        user_id = #{userId} and currency_id=#{currencyId}
	    ]]>
	</select>
	
	<update id="updateBalance" >
    <![CDATA[
        UPDATE t_user_balance SET
	           balance = #{money}
        WHERE 
	        user_id = #{userId} and
	        currency_id = 0
    ]]>
	</update>

	
</mapper>

