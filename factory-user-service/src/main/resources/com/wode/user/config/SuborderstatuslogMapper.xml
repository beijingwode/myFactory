<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper         PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="SuborderstatuslogMapper">

	<resultMap id="Suborderstatuslog" type="com.wode.factory.model.Suborderstatuslog">
        <result property="orderStatusLogId" column="orderStatusLogId"/>
        <result property="subOrderId" column="subOrderId"/>
        <result property="status" column="status"/>
        <result property="createTime" column="createTime"/>
        <result property="createBy" column="createBy"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		orderStatusLogId,subOrderId,status,createTime,createBy
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="orderStatusLogId">
    <![CDATA[
        INSERT INTO t_suborderstatuslog (
        	orderStatusLogId ,
        	subOrderId ,
        	status ,
        	createTime ,
        	createBy 
        ) VALUES (
        	#{orderStatusLogId} ,
        	#{subOrderId} ,
        	#{status} ,
        	#{createTime} ,
        	#{createBy} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE t_suborderstatuslog SET
	        subOrderId = #{subOrderId} ,
	        status = #{status} ,
	        createTime = #{createTime} ,
	        createBy = #{createBy} 
        WHERE 
	        orderStatusLogId = #{orderStatusLogId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_suborderstatuslog WHERE
        orderStatusLogId = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="Suborderstatuslog">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_suborderstatuslog 
	        WHERE 
		        orderStatusLogId = #{id} 
	    ]]>
	</select>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM t_suborderstatuslog 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="Suborderstatuslog">
    	SELECT <include refid="columns" />
	    FROM t_suborderstatuslog 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(orderStatusLogId)">
				AND orderStatusLogId = #{orderStatusLogId}
			</if>
	       <if test="@Ognl@isNotEmpty(subOrderId)">
				AND subOrderId = #{subOrderId}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				AND status = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND createTime >= #{createTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND createTime &lt;= #{createTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(createBy)">
				AND createBy = #{createBy}
			</if>
		</where>
	</sql>
	
</mapper>

